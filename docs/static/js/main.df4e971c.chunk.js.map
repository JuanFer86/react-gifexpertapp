{"version":3,"sources":["components/addCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"qNAiCeA,EA9BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACLC,mBAAS,IADJ,mBAClCC,EADkC,KACtBC,EADsB,KAkBzC,OACE,0BAAMC,SAXa,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC7BR,GAAe,SAAAS,GAAU,OAAMP,GAAN,mBAAqBO,OAC9CN,EAAc,OAQhB,2BAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAlBhB,SAACP,GAEzBF,EAAcE,EAAEQ,OAAOF,Y,uBCNdG,EAAO,uCAAG,WAAQC,GAAR,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCAPO,EAAc,SAAC,GAAyB,EAAtBJ,GAAuB,IAAnBC,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAItC,OACI,yBAAKc,UAAU,uDAEX,yBAAKC,IAAKf,EAAKgB,IAAMN,IACrB,+BAAKA,EAAL,OCwCGO,MA5Cf,YAAgC,IAAbnB,EAAY,EAAZA,SAAY,ECDH,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRxB,EAAQC,GAAUwB,MAAK,SAACC,GAAD,OACrBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDV4BK,CAAc1B,GAAlCa,EAJc,EAInBN,KAAaa,EAJM,EAINA,QAarB,OACI,oCACA,wBAAIJ,UAAU,qDAAsDhB,EAApE,KAEEoB,GAAW,uBAAGJ,UAAU,sDAAb,WAEb,yBAAKA,UAAU,cAGHH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACAiB,IAAMjB,EAAIC,IAELD,UEKZkB,MAnCjB,WAA0B,IAAD,EAEa1C,mBAAS,CAAC,cAFvB,mBAEhBQ,EAFgB,KAEJT,EAFI,KAYrB,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAIA,4BAEIS,EAAWe,KAAK,SAAAT,GAAQ,OACtB,kBAAC,EAAD,CACA2B,IAAM3B,EACNA,SAAWA,UCxBzB6B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.df4e971c.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    // console.log(e.target.value)\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n\r\n      if (inputValue.trim().length > 2) {\r\n        setCategories( categories => [ inputValue, ...categories ] ) ;\r\n        setInputValue('');\r\n      }\r\n    \r\n  };\r\n\r\n  return (\r\n    <form onSubmit={ handleSubmit }>\r\n      {/* <h1>{ inputValue }</h1> */}\r\n      <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","\r\n\r\nexport const getGifs = async ( category ) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=A6OwainTVajnKkVyqZ66iij30tROxxyA`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    //el signo de  ? en images, sirve como condicion de si existe la propiedad images\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    } )\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { id, title, url } ) => {\r\n\r\n    // console.log({id, title, url})\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn animate_slow\" >\r\n            {/* { props.title } */}\r\n            <img src={url} alt={ title }  />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React/* , { useState, useEffect } */ from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n// import PropTypes from 'prop-types'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nfunction GifGrid({ category }) {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    // console.log(loading);\r\n    // console.log(data)\r\n\r\n    // useEffect(() => {\r\n    //     getGifs( category )\r\n    //     .then(setImages)\r\n    //     // .then( imgs => setImages(imgs) );\r\n    // }, [ category ])\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn animate__slower\">{ category } </h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash animate__infinite\">Loading</p> }\r\n\r\n        <div className=\"card-grid \">\r\n\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key={ img.id }\r\n                        //envia cada una de las propiedad como si fueran independientes\r\n                        { ...img }\r\n                        />\r\n                    ) )\r\n                }\r\n    \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\n// GifGrid.propTypes = {\r\n\r\n// }\r\n\r\nexport default GifGrid\r\n\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n//custom hook, se puede usar efectos, estados entre otros...\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) =>\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      })\r\n    );\r\n  }, [category]);\r\n\r\n  return state; // data: [], loading: true\r\n};\r\n","import React, { useState } from 'react'\r\nimport AddCategory from './components/addCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\n// componente GiftExpertApp\r\n\r\nfunction GiftExpertApp() {\r\n\r\n  const [categories, setCategories] = useState(['One Punch'])\r\n\r\n  // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n  // const handleAdd = () => {\r\n  //   // setCategories([...categories, 'Naruto'])\r\n  //   // setCategories(['Naruto', ...categories])\r\n  //   setCategories( cats => ['Naruto', ...cats])\r\n  // }\r\n\r\n    return (\r\n      <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={setCategories} />\r\n        <hr />\r\n\r\n        {/* <button onClick={handleAdd} >Agregar</button> */}\r\n\r\n        <ol>\r\n          {\r\n            categories.map( category => (\r\n              <GifGrid \r\n              key={ category }\r\n              category={ category } \r\n              />\r\n            ) )\r\n          }\r\n        </ol>\r\n\r\n      </>\r\n    )\r\n  }\r\n  \r\n  export default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'animate.css'\n\nimport GiftExpertApp from './GifExpertApp';\n\nReactDOM.render(\n    <GiftExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}